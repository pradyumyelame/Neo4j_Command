docker compose up -d
docker exec -it cassandra-seed cqlsh

docker exec -it cassandra-node1 cqlsh
docker exec -it cassandra-node2 cqlsh

DESCRIBE KEYSPACES;
USE weather_data;

DESCRIBE TABLES;
DESCRIBE TABLE temperature_readings;

USE weather_data;
SELECT * FROM temperature_readings;

CREATE (:TrainStation {
  city: 'Copenhagen',
  lat: 55.672874,
  lon: 12.56459
});

CREATE (:Office {
  city: 'Malmo',
  lat: 55.611784,
  lon: 12.994341
});

UNWIND range(1, 10000) AS id
CREATE (:Location {
  name: 'Location_' + id,
  lat: 55.5 + rand() * 0.5,
  lon: 12.5 + rand() * 0.5
});

MATCH (t:TrainStation), (l:Location)
WHERE point.distance(
  point({latitude: t.lat, longitude: t.lon}),
  point({latitude: l.lat, longitude: l.lon})
) < 10000
MERGE (t)-[:TRAVEL_ROUTE]->(l);

MATCH (o:Office), (l:Location)
WHERE point.distance(
  point({latitude: o.lat, longitude: o.lon}),
  point({latitude: l.lat, longitude: l.lon})
) < 10000
MERGE (o)-[:TRAVEL_ROUTE]->(l);

MATCH (t:TrainStation), (l:Location)
RETURN l.name,
       round(point.distance(point({latitude: t.lat, longitude: t.lon}), point({latitude: l.lat, longitude: l.lon}))) AS distance_meters
ORDER BY distance_meters ASC
LIMIT 5;

MATCH (a)-[r:TRAVEL_ROUTE]->(b)
RETURN a, r, b LIMIT 100;